#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookShopDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mydb")]
	public partial class BookShopLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAddressBook(AddressBook instance);
    partial void UpdateAddressBook(AddressBook instance);
    partial void DeleteAddressBook(AddressBook instance);
    partial void InsertAdminList(AdminList instance);
    partial void UpdateAdminList(AdminList instance);
    partial void DeleteAdminList(AdminList instance);
    partial void InsertAnnouncement(Announcement instance);
    partial void UpdateAnnouncement(Announcement instance);
    partial void DeleteAnnouncement(Announcement instance);
    partial void InsertBookCategory(BookCategory instance);
    partial void UpdateBookCategory(BookCategory instance);
    partial void DeleteBookCategory(BookCategory instance);
    partial void InsertBookInfo(BookInfo instance);
    partial void UpdateBookInfo(BookInfo instance);
    partial void DeleteBookInfo(BookInfo instance);
    partial void InsertOrderInfo(OrderInfo instance);
    partial void UpdateOrderInfo(OrderInfo instance);
    partial void DeleteOrderInfo(OrderInfo instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    #endregion
		
		public BookShopLinqDataContext() : 
				base(global::BookShopDAL.Properties.Settings.Default.mydbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AddressBook> AddressBook
		{
			get
			{
				return this.GetTable<AddressBook>();
			}
		}
		
		public System.Data.Linq.Table<AdminList> AdminList
		{
			get
			{
				return this.GetTable<AdminList>();
			}
		}
		
		public System.Data.Linq.Table<Announcement> Announcement
		{
			get
			{
				return this.GetTable<Announcement>();
			}
		}
		
		public System.Data.Linq.Table<BookCategory> BookCategory
		{
			get
			{
				return this.GetTable<BookCategory>();
			}
		}
		
		public System.Data.Linq.Table<BookInfo> BookInfo
		{
			get
			{
				return this.GetTable<BookInfo>();
			}
		}
		
		public System.Data.Linq.Table<OrderInfo> OrderInfo
		{
			get
			{
				return this.GetTable<OrderInfo>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItem
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfo
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressBook")]
	public partial class AddressBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressID;
		
		private string _UserEmail;
		
		private string _ConsigneePerson;
		
		private string _ConsigneeAddress;
		
		private string _ConsigneeTel;
		
		private string _ZipCode;
		
		private bool _IsDefault;
		
		private EntitySet<OrderInfo> _OrderInfo;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnConsigneePersonChanging(string value);
    partial void OnConsigneePersonChanged();
    partial void OnConsigneeAddressChanging(string value);
    partial void OnConsigneeAddressChanged();
    partial void OnConsigneeTelChanging(string value);
    partial void OnConsigneeTelChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public AddressBook()
		{
			this._OrderInfo = new EntitySet<OrderInfo>(new Action<OrderInfo>(this.attach_OrderInfo), new Action<OrderInfo>(this.detach_OrderInfo));
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneePerson", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ConsigneePerson
		{
			get
			{
				return this._ConsigneePerson;
			}
			set
			{
				if ((this._ConsigneePerson != value))
				{
					this.OnConsigneePersonChanging(value);
					this.SendPropertyChanging();
					this._ConsigneePerson = value;
					this.SendPropertyChanged("ConsigneePerson");
					this.OnConsigneePersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ConsigneeAddress
		{
			get
			{
				return this._ConsigneeAddress;
			}
			set
			{
				if ((this._ConsigneeAddress != value))
				{
					this.OnConsigneeAddressChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAddress = value;
					this.SendPropertyChanged("ConsigneeAddress");
					this.OnConsigneeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeTel", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string ConsigneeTel
		{
			get
			{
				return this._ConsigneeTel;
			}
			set
			{
				if ((this._ConsigneeTel != value))
				{
					this.OnConsigneeTelChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeTel = value;
					this.SendPropertyChanged("ConsigneeTel");
					this.OnConsigneeTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_OrderInfo", Storage="_OrderInfo", ThisKey="AddressID", OtherKey="AddressID")]
		public EntitySet<OrderInfo> OrderInfo
		{
			get
			{
				return this._OrderInfo;
			}
			set
			{
				this._OrderInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_AddressBook", Storage="_UserInfo", ThisKey="UserEmail", OtherKey="UserEmail", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.AddressBook.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.AddressBook.Add(this);
						this._UserEmail = value.UserEmail;
					}
					else
					{
						this._UserEmail = default(string);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderInfo(OrderInfo entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook = this;
		}
		
		private void detach_OrderInfo(OrderInfo entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminList")]
	public partial class AdminList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _AdminPass;
		
		private string _AdminName;
		
		private EntitySet<Announcement> _Announcement;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnAdminPassChanging(string value);
    partial void OnAdminPassChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    #endregion
		
		public AdminList()
		{
			this._Announcement = new EntitySet<Announcement>(new Action<Announcement>(this.attach_Announcement), new Action<Announcement>(this.detach_Announcement));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string AdminPass
		{
			get
			{
				return this._AdminPass;
			}
			set
			{
				if ((this._AdminPass != value))
				{
					this.OnAdminPassChanging(value);
					this.SendPropertyChanging();
					this._AdminPass = value;
					this.SendPropertyChanged("AdminPass");
					this.OnAdminPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this.OnAdminNameChanging(value);
					this.SendPropertyChanging();
					this._AdminName = value;
					this.SendPropertyChanged("AdminName");
					this.OnAdminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminList_Announcement", Storage="_Announcement", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<Announcement> Announcement
		{
			get
			{
				return this._Announcement;
			}
			set
			{
				this._Announcement.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Announcement(Announcement entity)
		{
			this.SendPropertyChanging();
			entity.AdminList = this;
		}
		
		private void detach_Announcement(Announcement entity)
		{
			this.SendPropertyChanging();
			entity.AdminList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Announcement")]
	public partial class Announcement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnnounceMentID;
		
		private string _AdminID;
		
		private string _AnnounceTitle;
		
		private string _AnnounceContent;
		
		private System.DateTime _AnnounceDate;
		
		private EntityRef<AdminList> _AdminList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnnounceMentIDChanging(int value);
    partial void OnAnnounceMentIDChanged();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnAnnounceTitleChanging(string value);
    partial void OnAnnounceTitleChanged();
    partial void OnAnnounceContentChanging(string value);
    partial void OnAnnounceContentChanged();
    partial void OnAnnounceDateChanging(System.DateTime value);
    partial void OnAnnounceDateChanged();
    #endregion
		
		public Announcement()
		{
			this._AdminList = default(EntityRef<AdminList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceMentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnnounceMentID
		{
			get
			{
				return this._AnnounceMentID;
			}
			set
			{
				if ((this._AnnounceMentID != value))
				{
					this.OnAnnounceMentIDChanging(value);
					this.SendPropertyChanging();
					this._AnnounceMentID = value;
					this.SendPropertyChanged("AnnounceMentID");
					this.OnAnnounceMentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceTitle", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string AnnounceTitle
		{
			get
			{
				return this._AnnounceTitle;
			}
			set
			{
				if ((this._AnnounceTitle != value))
				{
					this.OnAnnounceTitleChanging(value);
					this.SendPropertyChanging();
					this._AnnounceTitle = value;
					this.SendPropertyChanged("AnnounceTitle");
					this.OnAnnounceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceContent", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AnnounceContent
		{
			get
			{
				return this._AnnounceContent;
			}
			set
			{
				if ((this._AnnounceContent != value))
				{
					this.OnAnnounceContentChanging(value);
					this.SendPropertyChanging();
					this._AnnounceContent = value;
					this.SendPropertyChanged("AnnounceContent");
					this.OnAnnounceContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceDate", DbType="DateTime NOT NULL")]
		public System.DateTime AnnounceDate
		{
			get
			{
				return this._AnnounceDate;
			}
			set
			{
				if ((this._AnnounceDate != value))
				{
					this.OnAnnounceDateChanging(value);
					this.SendPropertyChanging();
					this._AnnounceDate = value;
					this.SendPropertyChanged("AnnounceDate");
					this.OnAnnounceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminList_Announcement", Storage="_AdminList", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminList AdminList
		{
			get
			{
				return this._AdminList.Entity;
			}
			set
			{
				AdminList previousValue = this._AdminList.Entity;
				if (((previousValue != value) 
							|| (this._AdminList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminList.Entity = null;
						previousValue.Announcement.Remove(this);
					}
					this._AdminList.Entity = value;
					if ((value != null))
					{
						value.Announcement.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(string);
					}
					this.SendPropertyChanged("AdminList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookCategory")]
	public partial class BookCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _CategoryName;
		
		private int _ParentID;
		
		private EntitySet<BookCategory> _BookCategory2;
		
		private EntitySet<BookInfo> _BookInfo;
		
		private EntityRef<BookCategory> _BookCategory1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    #endregion
		
		public BookCategory()
		{
			this._BookCategory2 = new EntitySet<BookCategory>(new Action<BookCategory>(this.attach_BookCategory2), new Action<BookCategory>(this.detach_BookCategory2));
			this._BookInfo = new EntitySet<BookInfo>(new Action<BookInfo>(this.attach_BookInfo), new Action<BookInfo>(this.detach_BookInfo));
			this._BookCategory1 = default(EntityRef<BookCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._BookCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookCategory", Storage="_BookCategory2", ThisKey="CategoryID", OtherKey="ParentID")]
		public EntitySet<BookCategory> BookCategory2
		{
			get
			{
				return this._BookCategory2;
			}
			set
			{
				this._BookCategory2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookInfo", Storage="_BookInfo", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<BookInfo> BookInfo
		{
			get
			{
				return this._BookInfo;
			}
			set
			{
				this._BookInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookCategory", Storage="_BookCategory1", ThisKey="ParentID", OtherKey="CategoryID", IsForeignKey=true)]
		public BookCategory BookCategory1
		{
			get
			{
				return this._BookCategory1.Entity;
			}
			set
			{
				BookCategory previousValue = this._BookCategory1.Entity;
				if (((previousValue != value) 
							|| (this._BookCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookCategory1.Entity = null;
						previousValue.BookCategory2.Remove(this);
					}
					this._BookCategory1.Entity = value;
					if ((value != null))
					{
						value.BookCategory2.Add(this);
						this._ParentID = value.CategoryID;
					}
					else
					{
						this._ParentID = default(int);
					}
					this.SendPropertyChanged("BookCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookCategory2(BookCategory entity)
		{
			this.SendPropertyChanging();
			entity.BookCategory1 = this;
		}
		
		private void detach_BookCategory2(BookCategory entity)
		{
			this.SendPropertyChanging();
			entity.BookCategory1 = null;
		}
		
		private void attach_BookInfo(BookInfo entity)
		{
			this.SendPropertyChanging();
			entity.BookCategory = this;
		}
		
		private void detach_BookInfo(BookInfo entity)
		{
			this.SendPropertyChanging();
			entity.BookCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookInfo")]
	public partial class BookInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BookID;
		
		private int _CategoryID;
		
		private string _BookName;
		
		private string _BookSmallImageName;
		
		private string _BookBigImage;
		
		private string _BookAuthor;
		
		private string _BookPublisher;
		
		private System.DateTime _BookPublishDate;
		
		private string _BookISBN;
		
		private string _BookDescription;
		
		private decimal _BookMarketPrice;
		
		private int _BookDiscount;
		
		private System.Nullable<decimal> _BookSoldPrice;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntityRef<BookCategory> _BookCategory;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(string value);
    partial void OnBookIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    partial void OnBookSmallImageNameChanging(string value);
    partial void OnBookSmallImageNameChanged();
    partial void OnBookBigImageChanging(string value);
    partial void OnBookBigImageChanged();
    partial void OnBookAuthorChanging(string value);
    partial void OnBookAuthorChanged();
    partial void OnBookPublisherChanging(string value);
    partial void OnBookPublisherChanged();
    partial void OnBookPublishDateChanging(System.DateTime value);
    partial void OnBookPublishDateChanged();
    partial void OnBookISBNChanging(string value);
    partial void OnBookISBNChanged();
    partial void OnBookDescriptionChanging(string value);
    partial void OnBookDescriptionChanged();
    partial void OnBookMarketPriceChanging(decimal value);
    partial void OnBookMarketPriceChanged();
    partial void OnBookDiscountChanging(int value);
    partial void OnBookDiscountChanged();
    partial void OnBookSoldPriceChanging(System.Nullable<decimal> value);
    partial void OnBookSoldPriceChanged();
    #endregion
		
		public BookInfo()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._BookCategory = default(EntityRef<BookCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._BookCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BookName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this.OnBookNameChanging(value);
					this.SendPropertyChanging();
					this._BookName = value;
					this.SendPropertyChanged("BookName");
					this.OnBookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookSmallImageName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BookSmallImageName
		{
			get
			{
				return this._BookSmallImageName;
			}
			set
			{
				if ((this._BookSmallImageName != value))
				{
					this.OnBookSmallImageNameChanging(value);
					this.SendPropertyChanging();
					this._BookSmallImageName = value;
					this.SendPropertyChanged("BookSmallImageName");
					this.OnBookSmallImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookBigImage", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BookBigImage
		{
			get
			{
				return this._BookBigImage;
			}
			set
			{
				if ((this._BookBigImage != value))
				{
					this.OnBookBigImageChanging(value);
					this.SendPropertyChanging();
					this._BookBigImage = value;
					this.SendPropertyChanged("BookBigImage");
					this.OnBookBigImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAuthor", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BookAuthor
		{
			get
			{
				return this._BookAuthor;
			}
			set
			{
				if ((this._BookAuthor != value))
				{
					this.OnBookAuthorChanging(value);
					this.SendPropertyChanging();
					this._BookAuthor = value;
					this.SendPropertyChanged("BookAuthor");
					this.OnBookAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPublisher", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BookPublisher
		{
			get
			{
				return this._BookPublisher;
			}
			set
			{
				if ((this._BookPublisher != value))
				{
					this.OnBookPublisherChanging(value);
					this.SendPropertyChanging();
					this._BookPublisher = value;
					this.SendPropertyChanged("BookPublisher");
					this.OnBookPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPublishDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookPublishDate
		{
			get
			{
				return this._BookPublishDate;
			}
			set
			{
				if ((this._BookPublishDate != value))
				{
					this.OnBookPublishDateChanging(value);
					this.SendPropertyChanging();
					this._BookPublishDate = value;
					this.SendPropertyChanged("BookPublishDate");
					this.OnBookPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookISBN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BookISBN
		{
			get
			{
				return this._BookISBN;
			}
			set
			{
				if ((this._BookISBN != value))
				{
					this.OnBookISBNChanging(value);
					this.SendPropertyChanging();
					this._BookISBN = value;
					this.SendPropertyChanged("BookISBN");
					this.OnBookISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDescription", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BookDescription
		{
			get
			{
				return this._BookDescription;
			}
			set
			{
				if ((this._BookDescription != value))
				{
					this.OnBookDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BookDescription = value;
					this.SendPropertyChanged("BookDescription");
					this.OnBookDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookMarketPrice", DbType="Money NOT NULL")]
		public decimal BookMarketPrice
		{
			get
			{
				return this._BookMarketPrice;
			}
			set
			{
				if ((this._BookMarketPrice != value))
				{
					this.OnBookMarketPriceChanging(value);
					this.SendPropertyChanging();
					this._BookMarketPrice = value;
					this.SendPropertyChanged("BookMarketPrice");
					this.OnBookMarketPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDiscount", DbType="Int NOT NULL")]
		public int BookDiscount
		{
			get
			{
				return this._BookDiscount;
			}
			set
			{
				if ((this._BookDiscount != value))
				{
					this.OnBookDiscountChanging(value);
					this.SendPropertyChanging();
					this._BookDiscount = value;
					this.SendPropertyChanged("BookDiscount");
					this.OnBookDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookSoldPrice", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BookSoldPrice
		{
			get
			{
				return this._BookSoldPrice;
			}
			set
			{
				if ((this._BookSoldPrice != value))
				{
					this.OnBookSoldPriceChanging(value);
					this.SendPropertyChanging();
					this._BookSoldPrice = value;
					this.SendPropertyChanged("BookSoldPrice");
					this.OnBookSoldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookInfo_OrderItem", Storage="_OrderItem", ThisKey="BookID", OtherKey="BookID")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookInfo", Storage="_BookCategory", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public BookCategory BookCategory
		{
			get
			{
				return this._BookCategory.Entity;
			}
			set
			{
				BookCategory previousValue = this._BookCategory.Entity;
				if (((previousValue != value) 
							|| (this._BookCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookCategory.Entity = null;
						previousValue.BookInfo.Remove(this);
					}
					this._BookCategory.Entity = value;
					if ((value != null))
					{
						value.BookInfo.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("BookCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.BookInfo = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.BookInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInfo")]
	public partial class OrderInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderNo;
		
		private int _StatusID;
		
		private int _AddressID;
		
		private System.DateTime _OrderDate;
		
		private decimal _OrderAmount;
		
		private decimal _DiscountAmount;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntityRef<AddressBook> _AddressBook;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnOrderAmountChanging(decimal value);
    partial void OnOrderAmountChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    #endregion
		
		public OrderInfo()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._AddressBook = default(EntityRef<AddressBook>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL")]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._AddressBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderAmount", DbType="Money NOT NULL")]
		public decimal OrderAmount
		{
			get
			{
				return this._OrderAmount;
			}
			set
			{
				if ((this._OrderAmount != value))
				{
					this.OnOrderAmountChanging(value);
					this.SendPropertyChanging();
					this._OrderAmount = value;
					this.SendPropertyChanged("OrderAmount");
					this.OnOrderAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderInfo_OrderItem", Storage="_OrderItem", ThisKey="OrderNo", OtherKey="OrderNo")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_OrderInfo", Storage="_AddressBook", ThisKey="AddressID", OtherKey="AddressID", IsForeignKey=true)]
		public AddressBook AddressBook
		{
			get
			{
				return this._AddressBook.Entity;
			}
			set
			{
				AddressBook previousValue = this._AddressBook.Entity;
				if (((previousValue != value) 
							|| (this._AddressBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressBook.Entity = null;
						previousValue.OrderInfo.Remove(this);
					}
					this._AddressBook.Entity = value;
					if ((value != null))
					{
						value.OrderInfo.Add(this);
						this._AddressID = value.AddressID;
					}
					else
					{
						this._AddressID = default(int);
					}
					this.SendPropertyChanged("AddressBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderInfo", Storage="_OrderStatus", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.OrderInfo.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.OrderInfo.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderInfo = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderNo;
		
		private string _BookID;
		
		private int _Count;
		
		private decimal _Price;
		
		private int _Discount;
		
		private System.Nullable<decimal> _SoldPrice;
		
		private EntityRef<BookInfo> _BookInfo;
		
		private EntityRef<OrderInfo> _OrderInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnBookIDChanging(string value);
    partial void OnBookIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnSoldPriceChanging(System.Nullable<decimal> value);
    partial void OnSoldPriceChanged();
    #endregion
		
		public OrderItem()
		{
			this._BookInfo = default(EntityRef<BookInfo>);
			this._OrderInfo = default(EntityRef<OrderInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					if (this._OrderInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._BookInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldPrice", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SoldPrice
		{
			get
			{
				return this._SoldPrice;
			}
			set
			{
				if ((this._SoldPrice != value))
				{
					this.OnSoldPriceChanging(value);
					this.SendPropertyChanging();
					this._SoldPrice = value;
					this.SendPropertyChanged("SoldPrice");
					this.OnSoldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookInfo_OrderItem", Storage="_BookInfo", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
		public BookInfo BookInfo
		{
			get
			{
				return this._BookInfo.Entity;
			}
			set
			{
				BookInfo previousValue = this._BookInfo.Entity;
				if (((previousValue != value) 
							|| (this._BookInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookInfo.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._BookInfo.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._BookID = value.BookID;
					}
					else
					{
						this._BookID = default(string);
					}
					this.SendPropertyChanged("BookInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderInfo_OrderItem", Storage="_OrderInfo", ThisKey="OrderNo", OtherKey="OrderNo", IsForeignKey=true)]
		public OrderInfo OrderInfo
		{
			get
			{
				return this._OrderInfo.Entity;
			}
			set
			{
				OrderInfo previousValue = this._OrderInfo.Entity;
				if (((previousValue != value) 
							|| (this._OrderInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderInfo.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._OrderInfo.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._OrderNo = value.OrderNo;
					}
					else
					{
						this._OrderNo = default(string);
					}
					this.SendPropertyChanged("OrderInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private EntitySet<OrderInfo> _OrderInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public OrderStatus()
		{
			this._OrderInfo = new EntitySet<OrderInfo>(new Action<OrderInfo>(this.attach_OrderInfo), new Action<OrderInfo>(this.detach_OrderInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_OrderInfo", Storage="_OrderInfo", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<OrderInfo> OrderInfo
		{
			get
			{
				return this._OrderInfo;
			}
			set
			{
				this._OrderInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderInfo(OrderInfo entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_OrderInfo(OrderInfo entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserEmail;
		
		private string _UserPass;
		
		private string _UserTel;
		
		private EntitySet<AddressBook> _AddressBook;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPassChanging(string value);
    partial void OnUserPassChanged();
    partial void OnUserTelChanging(string value);
    partial void OnUserTelChanged();
    #endregion
		
		public UserInfo()
		{
			this._AddressBook = new EntitySet<AddressBook>(new Action<AddressBook>(this.attach_AddressBook), new Action<AddressBook>(this.detach_AddressBook));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string UserPass
		{
			get
			{
				return this._UserPass;
			}
			set
			{
				if ((this._UserPass != value))
				{
					this.OnUserPassChanging(value);
					this.SendPropertyChanging();
					this._UserPass = value;
					this.SendPropertyChanged("UserPass");
					this.OnUserPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTel", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string UserTel
		{
			get
			{
				return this._UserTel;
			}
			set
			{
				if ((this._UserTel != value))
				{
					this.OnUserTelChanging(value);
					this.SendPropertyChanging();
					this._UserTel = value;
					this.SendPropertyChanged("UserTel");
					this.OnUserTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_AddressBook", Storage="_AddressBook", ThisKey="UserEmail", OtherKey="UserEmail")]
		public EntitySet<AddressBook> AddressBook
		{
			get
			{
				return this._AddressBook;
			}
			set
			{
				this._AddressBook.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressBook(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_AddressBook(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
	}
}
#pragma warning restore 1591
